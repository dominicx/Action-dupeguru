name: dupeguru_ubuntu
on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started
    
env:
  REPO_URL: https://github.com/arsenetar/dupeguru.git
  REPO_BRANCH: master
  UPLOAD_RELEASE: true
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq install python3-pyqt5 pyqt5-dev-tools python3-wheel python3-venv python3-dev build-essential
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"


    - name: Clone source code
      run:  git clone https://github.com/arsenetar/dupeguru.git
        
    - name : Build APP
      id: compile
      run: |
        cd dupeguru
        python3 -m venv --system-site-packages ./env
        source ./env/bin/activate
        pip install -r requirements.txt -r requirements-extra.txt
        python build.py --clean
        python package.py
        echo "::set-output name=status::success"
        
    - name: Generate release tag
      id: tag
      if: steps.package.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo ''> release.txt
        echo "::set-output name=status::success"
    
    - name: Upload installer to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: dupeguru/*.deb
    
    - name: Upload kernel directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ format('{0}-dominicx', steps.getverion.outputs.version) }} 
        path: dupeguru/qt
    
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 7
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
